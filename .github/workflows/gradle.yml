name: Build
on: [push, pull_request]
jobs:
  build:

    runs-on: ubuntu-18.04

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache Gradle
        id: cache-gradle
        uses: actions/cache@v1
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle

      - uses: actions/checkout@v1

      - name: Grant execute permission to gradlew
        run: chmod +x gradlew

      - name: Build
        run: ./gradlew build -x test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          path: "**/build/libs"

  test:

    runs-on: ubuntu-18.04

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache Gradle
        id: cache-gradle
        uses: actions/cache@v1
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle

      - uses: actions/checkout@v1

      - name: Grant execute permission to gradlew
        run: chmod +x gradlew

      - name: Test
        run: ./gradlew test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload CodeCov Report
        uses: codecov/codecov-action@v1
        with:
          file: "**/build/reports/jacoco/**/*.xml"

      - name: Upload Test Report
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: build reports
          path: "**/build/reports"

  release:
    needs: [build, test]

    runs-on: ubuntu-18.04

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Set up Node.js v12.x
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache Gradle
        id: cache-gradle
        uses: actions/cache@v1
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle

      - uses: actions/checkout@v1

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Grant execute permission for update-versions.sh
        run: chmod +x update-versions.sh

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v2
        with:
          git_user_signingkey: true
          git_commit_gpgsign: true
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}

      - name: Release
        run: |
          yarn install
          yarn semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ORG_GRADLE_PROJECT_signingKeyId: ${{ steps.import_gpg.outputs.keyid }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.PASSPHRASE }}
          OSSHR_USER: ${{ secrets.OSSHR_USER }}
          ORG_GRADLE_PROJECT_nexusUser: ${{ secrets.OSSHR_USER }}
          OSSHR_PASSWORD: ${{ secrets.OSSHR_PASSWORD }}
          ORG_GRADLE_PROJECT_nexusPassword: ${{ secrets.OSSHR_PASSWORD }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.OSSHR_PASSWORD }}
          ORG_GRADLE_PROJECT_sonatypeUser: ${{ secrets.OSSHR_USER }}
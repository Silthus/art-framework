name: Build
on: [push, pull_request]
jobs:
  build:

    runs-on: ubuntu-18.04
    # We want to run on external PRs, but not on our own internal PRs as they'll be run
    # by the push to the branch.
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository


    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache Gradle
        id: cache-gradle
        uses: actions/cache@v1
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle-${{ secrets.CACHE_KEY }}

      - uses: actions/checkout@v1

      - name: Grant execute permission to gradlew
        run: chmod +x gradlew

      - name: Build
        run: ./gradlew build -x test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          path: "**/build/libs"

  test:

    runs-on: ubuntu-18.04
    # We want to run on external PRs, but not on our own internal PRs as they'll be run
    # by the push to the branch.
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache Gradle
        id: cache-gradle
        uses: actions/cache@v1
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle-${{ secrets.CACHE_KEY }}

      - uses: actions/checkout@v1

      - name: Grant execute permission to gradlew
        run: chmod +x gradlew

      - name: Test
        run: ./gradlew test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}

      - name: Upload Test Report
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: build reports
          path: "**/build/reports"
          
  javadocs:    
    runs-on: ubuntu-18.04
    if: github.ref == 'refs/heads/master'
    
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - uses: actions/checkout@v1

      - name: Grant execute permission to gradlew
        run: chmod +x gradlew

      - name: Build Javadocs
        run: ./gradlew javadoc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: api/build/docs/javadoc
          
  release:
    needs: [build, test]

    runs-on: ubuntu-18.04
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/alpha' || github.ref == 'refs/heads/beta'

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Set up Node.js v12.x
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache Gradle
        id: cache-gradle
        uses: actions/cache@v1
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle-${{ secrets.CACHE_KEY }}

      - uses: actions/checkout@v1

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Grant execute permission for update-versions.sh
        run: chmod +x update-versions.sh

      - name: Release
        run: |
          yarn install
          yarn semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
